{"version":3,"file":"OpenAi.js","sources":["../../../../openai-client/src/connector.ts","../../../../openai-client/src/views/manifest.ts","../../../../openai-client/src/icons/manifest.ts","../../../../openai-client/src/index.ts"],"sourcesContent":["import { ManifestTranslationConnector } from \"@jumoo/translate\";\r\n\r\nexport const connector: ManifestTranslationConnector = {\r\n    type: \"jumoo-tm-connector\",\r\n    alias: \"jumoo-tm-openai-connector\",\r\n    name: \"OpenAi Connector\",\r\n    meta: {\r\n      icon: \"jumoo-tm-openai-logo\",\r\n      label: \"OpenAi connector\",\r\n      alias: \"openAiConnector\",\r\n    },\r\n  };  ","import {\r\n    ManifestTranslationConnectorConfig,\r\n    ManifestTranslationConnectorPending,\r\n  } from \"@jumoo/translate\";\r\n  \r\n  const connectorConfig: ManifestTranslationConnectorConfig = {\r\n    type: \"jumoo-tm-connector-config\",\r\n    alias: \"jumoo-openai-config\",\r\n    name: \"OpenAi Connector Config\",\r\n    elementName: \"jumoo-openai-config\",\r\n    js: () => import(\"./config.view.js\"),\r\n  };\r\n  \r\n  const connectorPending: ManifestTranslationConnectorPending = {\r\n    type: \"jumoo-tm-connector-pending\",\r\n    alias: \"jumoo-openai-pending\",\r\n    name: \"OpenAi Connector Pending\",\r\n    elementName: \"jumoo-openai-pending\",\r\n    js: () => import(\"./pending.view.js\"),\r\n  };\r\n  \r\n  export const manifests = [connectorConfig, connectorPending];","const icons: UmbExtensionManifest = {\r\n\ttype: 'icons',\r\n\talias: 'jumoo.tm.icons.openai',\r\n\tname: 'Translation Manager OpenAi Icon',\r\n\tjs: () => import('./icons.js'),\r\n};\r\n\r\nexport const manifests = [icons];","import { UmbEntryPointOnInit } from \"@umbraco-cms/backoffice/extension-api\";\r\nimport { connector } from \"./connector\";\r\n\r\nimport { manifests as views } from \"./views/manifest\";\r\nimport { manifests as icons } from './icons/manifest.js';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n    extensionRegistry.registerMany([connector,  \r\n      ...icons,\r\n      ...views, \r\n      //...localizations\r\n      ]);\r\n}"],"names":["connector","connectorConfig","connectorPending","manifests","icons","onInit","_host","extensionRegistry","views"],"mappings":"AAEO,MAAMA,IAA0C;AAAA,EACnD,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,OAAO;AAAA,IACP,OAAO;AAAA,EAAA;AAEX,GCNMC,IAAsD;AAAA,EAC1D,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,EACb,IAAI,MAAM,OAAO,2BAAkB;AACrC,GAEMC,IAAwD;AAAA,EAC5D,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,EACb,IAAI,MAAM,OAAO,4BAAmB;AACtC,GAEaC,IAAY,CAACF,GAAiBC,CAAgB,GCrBvDE,IAA8B;AAAA,EACnC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,qBAAY;AAC9B,GAEaD,IAAY,CAACC,CAAK,GCDlBC,IAA8B,CAACC,GAAOC,MAAsB;AACrE,EAAAA,EAAkB,aAAa;AAAA,IAACP;AAAA,IAC9B,GAAGI;AAAAA,IACH,GAAGI;AAAAA;AAAAA,EAAA,CAEF;AACP;"}